var documenterSearchIndex = {"docs":
[{"location":"#MFDecoupling.jl-Documentation","page":"Home","title":"MFDecoupling.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MFDecoupling","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#List-of-Functions","page":"Home","title":"List of Functions","text":"","category":"section"},{"location":"#MFDecoupling","page":"Home","title":"MFDecoupling","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [MFDecoupling]\nOrder   = [:module, :constant, :type, :function, :marco]","category":"page"},{"location":"#MFDecoupling.gen_helpers-Tuple{Int64}","page":"Home","title":"MFDecoupling.gen_helpers","text":"gen_helpers(L::Int)\n\nGenerates index helpers for right hand side. \n\n\n\n\n\n","category":"method"},{"location":"#MFDecoupling.read_inputs-Tuple{String, String, Int64}","page":"Home","title":"MFDecoupling.read_inputs","text":"read_inputs(fp1::String, fp2::String, L::Int)\n\nReads two files at locations fp1, fp2.... ?\n\n\n\n\n\n","category":"method"},{"location":"#MFDecoupling.rhs!-Tuple{Vector, Vector, Vector, Float64, Int64, Int64, Int64, AbstractMatrix, AbstractMatrix}","page":"Home","title":"MFDecoupling.rhs!","text":"rhs!(dX::Vector, X::Vector, p, t)::Nothing\n\nRHS for DGL.\n\nParameters\n\np[1]:  L,    size of the chain\np[2]:  U,    local Hubbard interaction on the impurity site\np[3]:  Vr,   coupling between the impurity and chain\np[4]:  μ_imp chemical potential for impurity\np[5]:  - μ_c   chemical potential for chain (onsite energy shift is includid in the chemical potential)\n\n\n\n\n\n","category":"method"},{"location":"#MFDecoupling.rhs_real!-Tuple{Vector, Vector, Vector, Float64, Int64, Int64, Int64, AbstractMatrix, AbstractMatrix}","page":"Home","title":"MFDecoupling.rhs_real!","text":"rhs!(dX::Vector, X::Vector, p, t)::Nothing\n\nRHS for DGL.\n\nParameters\n\np[1]:  L,    size of the chain\np[2]:  U,    local Hubbard interaction on the impurity site\np[3]:  Vr,   coupling between the impurity and chain\np[4]:  μ_imp chemical potential for impurity\np[5]:  - μ_c   chemical potential for chain (onsite energy shift is includid in the chemical potential)\n\nLC = (L+3)L/2 LK = (L-1)L/2 LIm= 10 + LC +LK\n\nQ[i,j] = (L+1)i - (i+1)i/2 + j    i <= j   (i=j= 0 is not considered)         1, ..., LC P[i,j] = (i-1)L - (i+1)i/2 + j    0 < i < j         1, ..., LK\n\nMatrix Elelements ρ:  [1,1], [1,2], [1,3], [1,4], [2,2], [2,3], [2,4], [3,3], [3,4], [4,4]     Re  ->  [1, ..., 10]    and     Im  ->  [11 + LC + LK, ..., 20 + LC + LK]\n\nRe(ρ[1,1]) -> X[1],             Re(ρ[1,2]) -> X[2],             Re(ρ[1,3]) -> X[3],             Re(ρ[1,4]) -> X[4],\nRe(ρ[2,2]) -> X[5],             Re(ρ[2,3]) -> X[6],             Re(ρ[2,4]) -> X[7],\nRe(ρ[3,3]) -> X[8],             Re(ρ[3,4]) -> X[9],\nRe(ρ[3,3]) -> X[10]\nIm(ρ[1,1]) -> X[11+LC+LK],      Im(ρ[1,2]) -> X[12+LC+LK],      Im(ρ[1,3]) -> X[13+LC+LK],      Im(ρ[1,4]) -> X[14+LC+ LK],\nIm(ρ[2,2]) -> X[15+LC+LK],      Im(ρ[2,3]) -> X[16+LC+LK],      Im(ρ[2,4]) -> X[17+LC+LK],\nIm(ρ[3,3]) -> X[18+LC+LK],      Im(ρ[3,4]) -> X[19+LC+LK],\nIm(ρ[4,4]) -> X[20+LC+LK]\n\nC:  [0,1], [0,2], ..., [0,L], [1,1], ..., [1,L], [2,2], ..., [2,L], [3,3], ...., [L-1,L-1], [L-1,L], [L,L]     Re  ->  [11, ..., 10 + LC]      and     Im  ->  [21 + LC + LK, ..., 20 + 2 LC + LK]\n\nRe(C[i,j]) -> X[10+Q[i,j]]\n            Re(C[0,1]) -> X[11],    Re(C[0,2]) -> X[12],    ...,\n            Re(C[1,1]) -> X[11+L],  ...,    Re(C[L,L]) -> X[10+LC]\nIm(C[i,j]) -> X[10+Q[i,j] + LIm]\n            Im(C[0,1]) -> X[11+LIm],      Im(C[0,2]) -> X[12+LIm],     ...,\n            Im(C[1,1]) -> X[11+L+LIm],    ...,    Im(C[L,L]) -> X[10+LC+LIm]\n\nK:  [1,2], ..., [1,L], [2,3], ..., [2,L], [3,4], ...., [3,L], [4,5], ..., [L-2,L-1], [L-2,L], [L-1,L]     Re  ->  [11 + LC, ..., LIm]     and     Im  ->  [21 + 2 LC + LK, ..., 20 + 2 LC + 2 LK]\n\nRe(K[i,j]) -> X[10+LC+P[i,j]]\n            Re(K[1,2]) -> X[11+LC],     Re(K[1,3]) -> X[12+LC],     ...,\n            Re(K[2,3]) -> X[10+LC+L),   ...,    Re(K[L-1,L]) ->  X[LIm]\nIm(K[i,j]) -> X[10+LC+P[i,j]+LIm]\n            Im(K[1,2]) -> X[11+LC+LIm],     Im(K[1,3]) -> X[12+LC+LIm],     ...,\n            Im(K[2,3]) -> X[10+LC+L+LIm),   ...,    Im(K[L-1,L]) ->  X[2 LIm]\n\n\n\n\n\n","category":"method"},{"location":"#MFDecoupling.setup_calculation-Tuple{String, String, Int64}","page":"Home","title":"MFDecoupling.setup_calculation","text":"setup_calculation(fp1::String, fp2::String, L::Int; mode::Symbol=:real)\nsetup_calculation(X0::Vector, L::Int; mode=:real)\n\nSets up the calculation.  Returns start vector X0 and function rhs for the right hand side of differential equation.  Mode can either be :real or :complex. The former uses a real vector representation (with twice as many vector entries) and is the (much fast) default.\n\nIt may be useful for performance, to read inputs only a single time with read_inputs, which returns X0.\n\n\n\n\n\n","category":"method"}]
}
